pipeline {
    agent any
    environment {
        EMAIL_RECIPIENT = "dzassadcass@gmail.com"
    }
    stages {
        stage('Build') {
            steps {
                script {
                    sh 'echo "Building the code..." > build.log'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'build.log'
                }
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                script {
                    sh 'echo "Running unit and integration tests..." > test-results.log'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'test-results.log'
                }
            }
        }
        stage('Code Analysis') {
            steps {
                script {
                    sh 'echo "Analyzing the code..." > code-analysis.log'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'code-analysis.log'
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    sh 'echo "Scanning the code for vulnerabilities..." > security-scan.log'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'security-scan.log'
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                script {
                    sh 'echo "Deploying to staging..." > deploy-staging.log'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'deploy-staging.log'
                }
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                script {
                    sh 'echo "Running integration tests on staging..." > integration-tests-staging.log'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'integration-tests-staging.log'
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                script {
                    sh 'echo "Deploying to production..." > deploy-production.log'
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'deploy-production.log'
                }
            }
        }
    }
    post {
        always {
            script {
                def buildStatus = currentBuild.result
                def emailBody = """
                Build Status: ${buildStatus}
                Stages:
                - Build: ${currentBuild.currentResult}
                - Unit and Integration Tests: ${currentBuild.currentResult}
                - Code Analysis: ${currentBuild.currentResult}
                - Security Scan: ${currentBuild.currentResult}
                - Deploy to Staging: ${currentBuild.currentResult}
                - Integration Tests on Staging: ${currentBuild.currentResult}
                - Deploy to Production: ${currentBuild.currentResult}
                Errors: ${buildStatus == 'FAILURE' ? 'See logs for details.' : 'None'}
                """

                // Create a ZIP archive of all log files
                sh 'zip logs.zip build.log test-results.log code-analysis.log security-scan.log deploy-staging.log integration-tests-staging.log deploy-production.log'

                // Send email with ZIP file as an attachment
                mail to: EMAIL_RECIPIENT,
                     subject: "Build Status Email",
                     body: emailBody,
                     attach: 'logs.zip' // Specify the ZIP file as attachment
            }
        }
    }
}
